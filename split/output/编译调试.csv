问题,答案
"什么是交叉编译？","在一种环境下，编译另一种环境下运行的代码"
"在使用指针与结构体时是否遇到了系统稳定性问题？","用了指针与结构体，为了实现类似C++的特性，存在野指针问题，定位方式：ozone工具debug  
依据寄存器PC指针定位到出问题的代码位置，反推函数调用栈，手动查找，并未使用自动化工具分析"
"一个程序从开始运行到结束的完整过程包括哪四个过程？","编译预处理、编译、汇编、链接  

- **预处理**：（头文件、宏展开、注释去除）`gcc -E main.c -o main.i`  
- **编译**：（语法分析，生成汇编代码）`gcc -S main.i -o main.s`  
- **汇编**：（生成二进制机器码）`as main.s -o main.o`  
- **链接**：（指定路径下寻找库函数）`gcc main.o -o main`"
"不同的编译优化选项（-o）对编译速度、代码大小和优化重点有什么影响？","|      | 编译速度 | 代码大小 | 重点         |      |
| ---- | -------- | -------- | ------------ | ---- |
| o1   | 不变     | 大       |              |      |
| o2   | 牺牲     | 中       |              |      |
| o3   | 牺牲     | 中       | 提高速度     |      |
| os   | 牺牲     | 小       | 降低代码大小 |      |
| og   |          |          | 优化调试体验 |      |"
"GCC编译过程包含哪4个主要步骤？每个步骤的作用是什么？","GCC编译过程分为以下4个步骤：  
1. **预处理**：展开宏定义，处理文件嵌套、删除注释。  
2. **编译**：将源代码转换为汇编代码（此阶段检查语法但不检查逻辑）。  
3. **汇编**：将汇编代码转换为机器码。  
4. **链接**：  
   - 进行符号表查找与地址填充。  
   - 处理库的链接。  
   - 将汇编文件中函数的临时0地址替换为实际地址。  
   - 将每个符号定义与内存位置关联起来。  

（注：原笔记中的图片链接未在答案中体现，因其仅作为辅助参考。）"
"STM32编译后程序的大小由哪些部分组成？各自存放什么内容？","1. **Code（代码段）**：存放程序的代码部分；  
2. **RO-data（只读数据段）**：存放程序中定义的常量；  
3. **RW-data（读写数据段）**：存放初始化为非0值的全局变量；  
4. **ZI-data（零初始化数据段）**：存放未初始化的全局变量及初始化为0的变量。  

---"
